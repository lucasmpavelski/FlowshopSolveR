IG.Init                      "" c (random,neh)

IG.Init.NEH.Ratio                  "" o (0, 0.25, 0.5, 0.75, 1)
IG.Init.NEH.First.Priority         "" c (sum_pij,dev_pij,avgdev_pij,abs_dif,ss_sra,ss_srs,ss_srn_rcn,ss_sra_rcn,ss_srs_rcn,ss_sra_2rcn,ra_c1,ra_c2,ra_c3,lr_it_aj_ct,lr_it_ct,lr_it,lr_aj,lr_ct,kk1,kk2,nm) | IG.Init.NEH.Ratio > 0
IG.Init.NEH.First.PriorityWeighted "" c (no,yes) | IG.Init.NEH.Ratio > 0
IG.Init.NEH.First.PriorityOrder    "" c (incr,decr,hill,valley,hi_hilo,hi_lohi,lo_hilo,lo_lohi) | IG.Init.NEH.Ratio > 0
IG.Init.NEH.Priority               "" c (sum_pij,dev_pij,avgdev_pij,abs_dif,ss_sra,ss_srs,ss_srn_rcn,ss_sra_rcn,ss_srs_rcn,ss_sra_2rcn,ra_c1,ra_c2,ra_c3,lr_it_ct,lr_it,lr_aj,lr_ct,kk1,kk2,nm) | IG.Init.NEH.Ratio < 1
IG.Init.NEH.PriorityOrder          "" c (incr,decr,hill,valley,hi_hilo,hi_lohi,lo_hilo,lo_lohi) | IG.Init.NEH.Ratio < 1
IG.Init.NEH.PriorityWeighted       "" c (no,yes) | IG.Init.NEH.Ratio < 1
IG.Init.NEH.Insertion              "" c (first_best,last_best,kk1,kk2,nm1) | IG.Init.NEH.Ratio < 1

IG.Init.LocalSearch                "" c (none,first_improvement,best_improvement,random_best_improvement,best_insertion)
IG.Init.LocalSearch.SingleStep     "" c (0, 1) | IG.Init.LocalSearch != "none"

IG.Comp.Strat                "" c (strict,equal)

IG.Neighborhood.Size         "" r (0.0,1.0)
IG.Neighborhood.Strat        "" c (ordered,random)

IG.Local.Search              "" c (none,first_improvement,best_improvement,random_best_improvement,best_insertion)
IG.LS.Single.Step            "" c (0, 1)

IG.Accept                    "" c (always,better,temperature)
IG.Accept.Better.Comparison  "" c (equal,strict)
IG.Accept.Temperature        "" r (0.0,5.0)    | IG.Accept == 'temperature'

IG.Perturb                   "" c (rs,lsps)

IG.Perturb.DestructionSizeStrategy "" c (fixed,adaptive)
IG.Perturb.DestructionSize   "" i (2,8) | IG.Perturb.DestructionSizeStrategy == 'fixed'
 
IG.Perturb.Insertion         "" c (first_best,last_best,random_best)

IG.LSPS.Local.Search         "" c (none,first_improvement,best_improvement,random_best_improvement,best_insertion) | IG.Perturb == 'lsps'
IG.LSPS.Single.Step          "" c (0,1) | IG.Perturb == 'lsps' & IG.LSPS.Local.Search != 'none'

IG.AOS.Strategy              "" c (probability_matching,frrmab,linucb,thompson_sampling,random) | IG.Perturb.DestructionSizeStrategy == 'adaptive'
IG.AOS.RewardType            "" c (0,1,2,3) | IG.Perturb.DestructionSizeStrategy == 'adaptive'  & IG.AOS.Strategy != 'random'
IG.AOS.Options               "" c (2_4, 1_2_4, 1_4_8, 2_4_8) | IG.Perturb.DestructionSizeStrategy == 'adaptive' & IG.AOS.Strategy != 'random'

IG.AOS.PM.RewardType         "" c (avgabs,avgnorm,extabs,extnorm)  | IG.Perturb.DestructionSizeStrategy == 'adaptive' & IG.AOS.Strategy == 'probability_matching'
IG.AOS.PM.Alpha              "" r (0.1, 0.9) | IG.Perturb.DestructionSizeStrategy == 'adaptive' & IG.AOS.Strategy == 'probability_matching'
IG.AOS.PM.PMin               "" r (0.05, 0.2) | IG.Perturb.DestructionSizeStrategy == 'adaptive' & IG.AOS.Strategy == 'probability_matching'
IG.AOS.PM.UpdateWindow       "" i (1,500) | IG.Perturb.DestructionSizeStrategy == 'adaptive' & IG.AOS.Strategy == 'probability_matching'

IG.AOS.FRRMAB.WindowSize     "" i (10, 500) | IG.Perturb.DestructionSizeStrategy == 'adaptive' & IG.AOS.Strategy == 'frrmab'
IG.AOS.FRRMAB.Scale          "" r (0.01, 100) | IG.Perturb.DestructionSizeStrategy == 'adaptive' & IG.AOS.Strategy == 'frrmab'
IG.AOS.FRRMAB.Decay          "" r (0.25, 1.0) | IG.Perturb.DestructionSizeStrategy == 'adaptive' & IG.AOS.Strategy == 'frrmab'

IG.AOS.LINUCB.Alpha          "" r (0.0, 1.5) | IG.Perturb.DestructionSizeStrategy == 'adaptive' & IG.AOS.Strategy == 'linucb'

IG.AOS.WarmUp                "" i (0,2000) | IG.Perturb.DestructionSizeStrategy == 'adaptive'
IG.AOS.WarmUp.Strategy       "" c (random, fixed) | IG.Perturb.DestructionSizeStrategy == 'adaptive'

IG.AOS.TS.Strategy           "" c (static, dynamic) | IG.Perturb.DestructionSizeStrategy == 'adaptive' & IG.AOS.Strategy == 'thompson_sampling'
IG.AOS.TS.C                  "" i (1,500)  | IG.Perturb.DestructionSizeStrategy == 'adaptive' & IG.AOS.Strategy == 'thompson_sampling' & IG.AOS.TS.Strategy == 'dynamic'

IG.DestructionStrategy        "" c (random,adaptive_position)

IG.AdaptivePosition.AOS.Strategy              "" c (probability_matching,frrmab,linucb,thompson_sampling,random) | IG.DestructionStrategy == 'adaptive_position'

IG.AdaptivePosition.AOS.WarmUp                "" i (0,2000) | IG.DestructionStrategy == 'adaptive_position'
IG.AdaptivePosition.AOS.WarmUp.Strategy       "" c (random, fixed) | IG.DestructionStrategy == 'adaptive_position'

IG.AdaptivePosition.AOS.RewardType            "" c (0,1,2,3) | IG.DestructionStrategy == 'adaptive_position'  & IG.AdaptivePosition.AOS.Strategy != 'random'
IG.AdaptivePosition.AOS.Options               "" c (0_1_2_3) | IG.DestructionStrategy == 'adaptive_position' & IG.AdaptivePosition.AOS.Strategy != 'random'

IG.AdaptivePosition.AOS.PM.RewardType         "" c (avgabs,avgnorm,extabs,extnorm)  | IG.DestructionStrategy == 'adaptive_position' & IG.AdaptivePosition.AOS.Strategy == 'probability_matching'
IG.AdaptivePosition.AOS.PM.Alpha              "" r (0.1, 0.9) | IG.DestructionStrategy == 'adaptive_position' & IG.AdaptivePosition.AOS.Strategy == 'probability_matching'
IG.AdaptivePosition.AOS.PM.PMin               "" r (0.05, 0.2) | IG.DestructionStrategy == 'adaptive_position' & IG.AdaptivePosition.AOS.Strategy == 'probability_matching'
IG.AdaptivePosition.AOS.PM.UpdateWindow       "" i (1,500) | IG.DestructionStrategy == 'adaptive_position' & IG.AdaptivePosition.AOS.Strategy == 'probability_matching'

IG.AdaptivePosition.AOS.FRRMAB.WindowSize     "" i (10, 500) | IG.DestructionStrategy == 'adaptive_position' & IG.AdaptivePosition.AOS.Strategy == 'frrmab'
IG.AdaptivePosition.AOS.FRRMAB.Scale          "" r (0.01, 100) | IG.DestructionStrategy == 'adaptive_position' & IG.AdaptivePosition.AOS.Strategy == 'frrmab'
IG.AdaptivePosition.AOS.FRRMAB.Decay          "" r (0.25, 1.0) | IG.DestructionStrategy == 'adaptive_position' & IG.AdaptivePosition.AOS.Strategy == 'frrmab'

IG.AdaptivePosition.AOS.LINUCB.Alpha          "" r (0.0, 1.5) | IG.DestructionStrategy == 'adaptive_position' & IG.AdaptivePosition.AOS.Strategy == 'linucb'

IG.AdaptivePosition.AOS.TS.Strategy           "" c (static, dynamic) | IG.DestructionStrategy == 'adaptive_position' & IG.AdaptivePosition.AOS.Strategy == 'thompson_sampling'
IG.AdaptivePosition.AOS.TS.C                  "" i (1,500)  | IG.DestructionStrategy == 'adaptive_position' & IG.AdaptivePosition.AOS.Strategy == 'thompson_sampling' & IG.AOS.TS.Strategy == 'dynamic'
